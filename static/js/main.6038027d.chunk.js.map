{"version":3,"sources":["components/TableRow/TableRow.js","components/TableHeaders/TableHeaders.js","components/Pagination/Pagination.js","components/Input/Input.js","components/Table/Table.js","utilities/fetchData.js","components/SelectedCompany/SelectedCompany.js","App.js","index.js"],"names":["TableCell","type","children","TableRow","props","data","id","name","city","incomes","onClick","map","detail","key","reduce","acc","income","parseInt","value","headers","TableHeaders","StyledNav","styled","nav","Pagination","pageCount","currentPage","setCurrentPage","pageNumbers","i","push","disabled","length","StyledInput","input","Input","onChange","placeholder","StyledTable","table","spin","keyframes","StyledSpinner","span","StyledContainer","section","Table","companiesData","loaded","setSelectedCompany","useState","window","innerWidth","itemsPerPage","setItemPerPage","inputValue","setInputValue","sortedCompanies","sort","first","second","reverse","lastCompany","firstCompany","displayedCompanies","filter","company","toLowerCase","includes","slice","addEventListener","event","target","index","style","display","justifyContent","alignItems","flexDirection","textAlign","companiesDb","FetchData","a","fetch","response","json","incomesData","incomesResponse","StyledSection","StyledButton","button","StyledDetails","article","StyledIncomesDetails","aside","StyledInputsSection","p","SelectedCompany","selectedCompany","startDate","setStartDate","endDate","setEndDate","incomeInRangeOfDates","date","summedIncomes","lastMonthIncome","match","b","console","log","fontSize","htmlFor","e","Math","round","App","setCompaniesData","setLoaded","useEffect","fetchData","then","getData","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6038027d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TableCell = ({ type, children }) => type === 'data' ? <td>{children}</td> : <th>{children}</th>;\r\n\r\n\r\nconst TableRow = (props) => {\r\n   const { id, name, city, incomes } = props.data;\r\n   return (\r\n\r\n      <tr onClick={props.onClick}>\r\n\r\n         {props.type === 'header' ?\r\n            props.data.map(detail => <TableCell type={props.type} key={`${props.type}_${detail}`}>{detail}</TableCell>)\r\n            :\r\n            (<>\r\n               <TableCell type='data'>{id}</TableCell>\r\n               <TableCell type='data'>{name}</TableCell>\r\n               <TableCell type='data'>{city}</TableCell>\r\n               <TableCell type='data'>{`$${incomes.reduce((acc, income) => acc + parseInt(income.value), 0)}`}</TableCell>\r\n\r\n            </>\r\n            )\r\n\r\n         }\r\n      </tr>\r\n   )\r\n}\r\n\r\nexport default TableRow;\r\n","import React from 'react'\r\nimport TableRow from '../TableRow/TableRow';\r\n\r\nconst headers = ['Id', 'Name', 'City', 'Total Income']\r\n\r\nconst TableHeaders = () => {\r\n   return (\r\n      <thead>\r\n         <TableRow type='header' data={headers} />\r\n      </thead>\r\n   )\r\n}\r\n\r\nexport default TableHeaders\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNav = styled.nav`\r\n   display:flex;\r\n   position:absolute;\r\n   bottom:0;\r\n   right:0;\r\n   justify-content:flex-end;\r\n   align-items:center;\r\n   width:100%;\r\n   margin:5px 0;\r\n   button{\r\n      margin:0 5px;\r\n      cursor:pointer;\r\n   }\r\n   div{\r\n      margin:0 5px;\r\n      transition:.2s ease-in-out ;\r\n      cursor:pointer;\r\n      display:none;\r\n      visibility:hidden;\r\n      \r\n   }\r\n   .visible{\r\n      display:block;\r\n      visibility:visible;\r\n   }\r\n   .active{\r\n      color:royalblue;\r\n      border-bottom:2px solid royalblue;\r\n      \r\n   }\r\n   span:first-child{\r\n      color:royalblue;\r\n   }\r\n\r\n`;\r\n\r\nconst Pagination = ({ pageCount, currentPage, setCurrentPage }) => {\r\n   let pageNumbers = [];\r\n   for (let i = 1; i <= pageCount; i++) { pageNumbers.push(i) }\r\n\r\n   return (\r\n      <StyledNav>\r\n\r\n\r\n         <button onClick={() => setCurrentPage(1)}>\r\n            &#9668;\r\n         </button>\r\n\r\n         <button disabled={currentPage === 1 ? true : false} onClick={() => setCurrentPage(currentPage - 1)}>\r\n            &larr;\r\n         </button>\r\n         <span>{`${currentPage} of ${pageNumbers.length}`}</span>\r\n\r\n         <button disabled={currentPage === pageNumbers.length ? true : false} onClick={() => setCurrentPage(currentPage + 1)}>\r\n            &rarr;\r\n         </button>\r\n         <button onClick={() => setCurrentPage(pageNumbers.length)}>\r\n            &#9658;\r\n         </button>\r\n      </StyledNav>\r\n   )\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n   width: 60%;\r\n   height:5%;\r\n   background:none;\r\n   border:2px solid royalblue;\r\n   margin:5px auto ;\r\n   :focus{\r\n      border-color:royalblue;\r\n      outline:royalblue;\r\n   }\r\n`;\r\n\r\nconst Input = ({ onChange }) => {\r\n   return <StyledInput placeholder='Search in table...' onChange={onChange} />\r\n}\r\n\r\nexport default Input\r\n","import React, { useState } from 'react';\r\nimport TableHeaders from '../TableHeaders/TableHeaders';\r\nimport TableRow from '../TableRow/TableRow';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport Input from '../Input/Input';\r\n\r\n\r\nconst StyledTable = styled.table`\r\ntext-align:center;\r\nborder:2px solid royalblue;\r\nborder-collapse:collapse;\r\nfont-size:.7rem;\r\n\r\n\r\nth{\r\n   color:white;\r\n   background-color: royalblue;\r\n}\r\nth,td,tr{\r\n   border:2px solid royalblue;\r\n   border-collapse:collapse;\r\n   transition: .1s ease-in-out;\r\n   \r\n}\r\ntd{\r\n   cursor:pointer;\r\n}\r\ntr:hover td {\r\n   color:white;\r\n   background-color: royalblue;\r\n\r\n}\r\n`;\r\nconst spin = keyframes`\r\nfrom{\r\n   transform:rotate(0deg)\r\n}\r\n   to{\r\n      \r\n      transform:rotate(360deg)\r\n   }\r\n`;\r\nconst StyledSpinner = styled.span`\r\n   position:relative;\r\n   display:block;\r\n   width: 1.5rem;\r\n   height: 1.5rem;\r\n   background:none;\r\n   border:3px solid black;\r\n   margin-top:1rem;\r\n   border-radius:50%;\r\n   ::before{\r\n      content:'';\r\n      width: 100%;\r\n      height: 20%;\r\n      top:50%;\r\n      left:50%;\r\n      position:absolute;\r\n      background-color: #fff;\r\n      transform-origin:0% 50%;\r\n      animation: ${spin} 1s linear infinite;\r\n   }\r\n`;\r\nconst StyledContainer = styled.section`\r\n   display: flex;\r\n   position: absolute;\r\n   padding: 5px;\r\n   justify-content:flex-start;\r\n   align-content:center;\r\n   flex-direction:column;\r\n   width: 90%;\r\n   height: 90%;\r\n`;\r\n\r\nconst Table = ({ companiesData, loaded, setSelectedCompany }) => {\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [itemsPerPage, setItemPerPage] = useState((window.innerWidth > 1000 ? 25 : 9));\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n\r\n   //Sorting data by income descending\r\n   const sortDescending = (first, second) => first.incomes.reduce((acc, income) => acc + parseInt(income.value), 0) - second.incomes.reduce((acc, income) => acc + parseInt(income.value), 0);\r\n   const sortedCompanies = companiesData.sort(sortDescending).reverse();\r\n\r\n   //Filtering companies by name\r\n\r\n   const filteredCompanies = sortedCompanies.filter(company => company.name.toLowerCase().includes(inputValue.toLowerCase()));\r\n\r\n   //Pagination logic\r\n   const lastCompany = currentPage * itemsPerPage;\r\n   const firstCompany = lastCompany - itemsPerPage;\r\n   const displayedCompanies = filteredCompanies.slice(firstCompany, lastCompany);\r\n   const pageCount = sortedCompanies.length / itemsPerPage;\r\n\r\n\r\n   window.addEventListener('resize', () => window.innerWidth > 1000 ? setItemPerPage(25) : setItemPerPage(9))\r\n   return (loaded ?\r\n      <StyledContainer>\r\n\r\n         <Input onChange={(event) => setInputValue(event.target.value)} />\r\n         <StyledTable>\r\n\r\n            <TableHeaders />\r\n            <tbody>\r\n               {displayedCompanies.map((company, index) => <TableRow\r\n                  data={company}\r\n                  type='data'\r\n                  key={`${company.name}_${index}`}\r\n                  onClick={() => setSelectedCompany(company)}\r\n               />)}\r\n            </tbody>\r\n         </StyledTable>\r\n         <Pagination pageCount={pageCount} currentPage={currentPage} setCurrentPage={setCurrentPage} />\r\n      </StyledContainer>\r\n      :\r\n      <h1 style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', textAlign: 'center' }}>Hello <br /><StyledSpinner /><br /> Content is loading now... </h1>\r\n   )\r\n}\r\n\r\nexport default Table\r\n","\r\nconst APIKeyDetails = `https://recruitment.hal.skygate.io/companies`;\r\nconst APIKeyIncomes = `https://recruitment.hal.skygate.io/incomes/`;\r\n\r\nlet companiesDb = [];\r\n\r\nconst FetchData = async () => {\r\n   //Get data that include company's id required to make second API request\r\n   let response = await fetch(APIKeyDetails);\r\n   let data = await response.json();\r\n\r\n   companiesDb = data;\r\n\r\n   //Looping trough IDs to get incomes particulars\r\n   for (let i = 0; i < data.length; i++) {\r\n      let incomesData = await fetch(`${APIKeyIncomes}${data[i].id}`)\r\n\r\n      let incomesResponse = await incomesData.json();\r\n      let { incomes } = incomesResponse;\r\n      companiesDb[i].incomes = incomes;\r\n   }\r\n\r\n   return companiesDb;\r\n}\r\n\r\nexport default FetchData;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSection = styled.section`\r\n   position: relative;\r\n   display:flex;\r\n   flex-direction:column;\r\n   top:0;\r\n   left: 0;\r\n   width:100%;\r\n   height: 100%;\r\n   background-color: white;\r\n   span{\r\n      font-weight:bold;\r\n   }\r\n   input{\r\n      margin: 5px 0;\r\n      border:none;\r\n      border-bottom:2px solid royalblue;\r\n\r\n   }\r\n   \r\n`;\r\nconst StyledButton = styled.button`\r\ncursor:pointer;\r\n   margin: 0;\r\n   padding: 0;\r\n   position: relative;\r\n   border:none;\r\n   width:30px;\r\n   height: 30px;\r\n   background:none;\r\n   top:2%;\r\n   left: 2%;\r\n   ::before,::after{\r\n      position:absolute;\r\n      left:0;\r\n      content:'';\r\n      width:100%;\r\n      height: 10%;\r\n      background-color: #000;\r\n      transform-origin: 1px;\r\n   }\r\n   ::before{\r\n      top:0;\r\n      transform:translateY(3.75px) rotate(45deg);\r\n   }\r\n   ::after{\r\n      bottom:0;\r\n      transform:translateY(-3.75px) rotate(-45deg);\r\n   }\r\n`;\r\nconst StyledDetails = styled.article`\r\n   position: relative;\r\n   width: 90%;\r\n   height: 90%;\r\n   top: 50%;\r\n   left:50%;\r\n   transform:translate(-50%,-50%);\r\n   display: flex;\r\n   flex-direction:column;\r\n   align-items: center;\r\n   h2,h3{\r\n      text-align:center;\r\n      span{\r\n         color:royalblue;\r\n      }\r\n   }\r\n`;\r\nconst StyledIncomesDetails = styled.aside`\r\ndisplay: flex;\r\njustify-content: center;\r\nheight: 80%;\r\nwidth: 100%;\r\ndiv{\r\n   width:33%;\r\n   display: flex;\r\n   flex-direction:column;\r\n   justify-content: flex-start;\r\n   align-items: center;\r\n   h4{\r\n   color:royalblue;\r\n   text-align:center;\r\n\r\n}\r\n}\r\n`;\r\nconst StyledInputsSection = styled.p`\r\nlabel{\r\n   margin:5px 5px;\r\n}\r\n`;\r\n\r\n\r\nconst SelectedCompany = ({ selectedCompany, setSelectedCompany }) => {\r\n   const [startDate, setStartDate] = useState('2018-01-01');\r\n   const [endDate, setEndDate] = useState('2020-12-31');\r\n\r\n   const { name, city, id, incomes } = selectedCompany;\r\n   const incomeInRangeOfDates = incomes.filter(income => income.date >= startDate && income.date <= endDate)\r\n   const summedIncomes = incomeInRangeOfDates.reduce((acc, income) => acc + parseInt(income.value), 0);\r\n\r\n   const lastMonthIncome = incomes.map(income => (income.date.match(/-12-/) ? parseInt(income.value) : 0)).filter(value => value !== 0).reduce((a, b) => a + b, 0);\r\n   console.log(incomeInRangeOfDates.length)\r\n   return (\r\n      <StyledSection>\r\n         <StyledButton onClick={() => setSelectedCompany({})}></StyledButton>\r\n         <StyledDetails>\r\n            <h2><span>{id}.</span>&nbsp;{name}</h2>\r\n            <h3><span>Registered at:</span>&nbsp;{city}</h3>\r\n            <span style={{ fontSize: '.8rem' }}>Below You can change range of date used to calculate Total and Average incomes</span>\r\n            <StyledInputsSection>\r\n               <label htmlFor=\"input_startDate\">Set start date:</label>\r\n               <input\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                  id=\"input_startDate\"\r\n                  type=\"date\"\r\n               />\r\n               <label htmlFor=\"endDate\">Set end date:</label>\r\n               <input\r\n                  onChange={(e) => setEndDate(e.target.value)}\r\n                  id=\"endDate\"\r\n                  type=\"date\" />\r\n            </StyledInputsSection>\r\n            <StyledIncomesDetails>\r\n               <div>\r\n                  <h4>Total Income :</h4>\r\n                  <span>{`$${summedIncomes}`}</span>\r\n               </div>\r\n               <div>\r\n                  <h4>Average Income :</h4>\r\n                  <span>{`$${parseInt(Math.round(summedIncomes / incomeInRangeOfDates.length))}`}</span>\r\n               </div>\r\n               <div>\r\n                  <h4>Last Month Income : </h4>\r\n                  <span>{`$${lastMonthIncome}`}</span>\r\n               </div>\r\n\r\n            </StyledIncomesDetails>\r\n         </StyledDetails>\r\n      </StyledSection>\r\n   )\r\n}\r\n\r\nexport default SelectedCompany\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Table from './components/Table/Table';\nimport fetchData from './utilities/fetchData';\nimport SelectedCompany from './components/SelectedCompany/SelectedCompany';\n\nfunction App() {\n\n  const [companiesData, setCompaniesData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [selectedCompany, setSelectedCompany] = useState({});\n\n  useEffect(() => {\n    const getData = async () => await fetchData().then(data => { setCompaniesData(data); setLoaded(true) })\n\n    getData()\n  }, [])\n\n  return (\n    <main className=\"App\">\n\n      <Table loaded={loaded} companiesData={companiesData} setSelectedCompany={setSelectedCompany} />\n\n      {\n        selectedCompany.id\n        &&\n        <SelectedCompany\n          selectedCompany={selectedCompany}\n          setSelectedCompany={setSelectedCompany}\n        />\n      }\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}